{"pageProps":{"post":{"attributes":{},"html":"<h1 id=\"refactoring-proptypes\"><strong>Refactoring PropTypes</strong></h1>\n<p>Alright, let&#39;s get the blood flowing a bit and take a look at this component hiding out in <code>src/components/controls.jsx</code>:</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">PropTypes</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;prop-types&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">ControlPanel</span> = (<span class=\"hljs-params\">{ name, onChange }</span>) =&gt; {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>\n      <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;flex flex-row gap-4 text-white bg-primary-10&quot;</span>\n      <span class=\"hljs-attr\">onSubmit</span>=<span class=\"hljs-string\">{(event)</span> =&gt;</span> event.preventDefault()}\n    &gt;\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;font-bold&quot;</span>&gt;</span>Your Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span>\n          <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;name&quot;</span>\n          <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;w-full&quot;</span>\n          <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span>\n          <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span>\n          <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{onChange}</span>\n        /&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-title class_\">ControlPanel</span>.<span class=\"hljs-property\">propTypes</span> = {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-title class_\">PropTypes</span>.<span class=\"hljs-property\">string</span>,\n  <span class=\"hljs-attr\">onChange</span>: <span class=\"hljs-title class_\">PropTypes</span>.<span class=\"hljs-property\">func</span>,\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">ControlPanel</span>;\n</code></pre>\n<h2 id=\"exercise\">Exercise</h2>\n<p>We&#39;re going to quickly migrate this component from JavaScript to TypeScript.</p>\n<p>This is mostly <strong>a set up to make a simple point</strong>: Having a mix of JavaScript and TypeScript as you&#39;re migrating is totally a thing.</p>\n<p>Here&#39;s what you&#39;re going to do:</p>\n<ul>\n<li>Change the file extension form <code>.jsx</code> to <code>.tsx</code>.</li>\n<li>Get rid of those gnarly <code>propTypes</code> and add types to our props. You can either do it inline or you can create a new type called <code>ControlPanelProps</code>.</li>\n<li>See if you can add another prop to <code>NameBadge</code> called <code>greeting</code>. This prop should replace &quot;HELLO&quot; on the badge.</li>\n<li>See if you can figure out how to type the <code>onChange</code> handler.<ul>\n<li><strong>Hint</strong>: Use what you have learned about hovering over properties to figure out what types they use.</li>\n<li>If you can&#39;t figure it out, you can cheat and the <code>any</code> type. But, be warned: this is the <em>only</em> time that I&#39;m going to allow you to use the <code>any</code> for the remainder of our time together.</li>\n</ul>\n</li>\n</ul>\n","markdown":"# **Refactoring PropTypes**\n\nAlright, let's get the blood flowing a bit and take a look at this component hiding out in `src/components/controls.jsx`:\n\n```tsx\nimport PropTypes from \"prop-types\";\n\nconst ControlPanel = ({ name, onChange }) => {\n  return (\n    <form\n      className=\"flex flex-row gap-4 text-white bg-primary-10\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <div>\n        <label className=\"font-bold\">Your Name</label>\n        <input\n          name=\"name\"\n          className=\"w-full\"\n          type=\"text\"\n          value={name}\n          onChange={onChange}\n        />\n      </div>\n    </form>\n  );\n};\n\nControlPanel.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default ControlPanel;\n```\n\n## Exercise\n\nWe're going to quickly migrate this component from JavaScript to TypeScript.\n\nThis is mostly **a set up to make a simple point**: Having a mix of JavaScript and TypeScript as you're migrating is totally a thing.\n\nHere's what you're going to do:\n\n- Change the file extension form `.jsx` to `.tsx`.\n- Get rid of those gnarly `propTypes` and add types to our props. You can either do it inline or you can create a new type called `ControlPanelProps`.\n- See if you can add another prop to `NameBadge` called `greeting`. This prop should replace \"HELLO\" on the badge.\n- See if you can figure out how to type the `onChange` handler.\n  - **Hint**: Use what you have learned about hovering over properties to figure out what types they use.\n  - If you can't figure it out, you can cheat and the `any` type. But, be warned: this is the _only_ time that I'm going to allow you to use the `any` for the remainder of our time together.\n","slug":"refactoring-prototypes","title":"Refactoring Prototypes","section":"PropTypes","icon":"file-code","filePath":"/home/runner/work/React-with-TypeScript/React-with-TypeScript/lessons/03-PropTypes/C-refactoring-prototypes.md","nextSlug":"/React-with-TypeScript/lessons/PropTypes/solutions","prevSlug":"/React-with-TypeScript/lessons/PropTypes/migrating-from-proptypes"}},"__N_SSG":true}