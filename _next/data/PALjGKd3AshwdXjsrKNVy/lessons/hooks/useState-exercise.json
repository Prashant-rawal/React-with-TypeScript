{"pageProps":{"post":{"attributes":{},"html":"<h1 id=\"usestate-exercise\"><strong>useState Exercise</strong></h1>\n<br>\n\n<p>Your mission—if you choose to accept it—is to update our Accident Counter and get that form working with our state.</p>\n<pre><code class=\"language-tsx\">&lt;div&gt;\n  &lt;form onSubmit={(e) =&gt; e.preventDefault()}&gt;\n    &lt;input type=&quot;number&quot; value={0} /&gt;\n    &lt;button type=&quot;submit&quot;&gt;Update Counter&lt;/button&gt;\n  &lt;/form&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Here&#39;s what you&#39;re going to need to do.</p>\n<ul>\n<li>Add an additional <code>useState</code> hook that stores the value in the input field.</li>\n<li>On submit, update the value.</li>\n</ul>\n","markdown":"# **useState Exercise**\n\n<br>\n\nYour mission—if you choose to accept it—is to update our Accident Counter and get that form working with our state.\n\n```tsx\n<div>\n  <form onSubmit={(e) => e.preventDefault()}>\n    <input type=\"number\" value={0} />\n    <button type=\"submit\">Update Counter</button>\n  </form>\n</div>\n```\n\nHere's what you're going to need to do.\n\n- Add an additional `useState` hook that stores the value in the input field.\n- On submit, update the value.\n","slug":"useState-exercise","title":"useState Exercise","section":"Hooks","icon":"hammer","filePath":"/home/runner/work/React-with-TypeScript/React-with-TypeScript/lessons/05-hooks/B-useState-exercise.md","nextSlug":"/React-with-TypeScript/lessons/hooks/useState-Solution","prevSlug":"/React-with-TypeScript/lessons/hooks/useState"}},"__N_SSG":true}